
// Return a multidimensional array from a function/method
// Return multiple values



// Using Tuple
public List<Tuple<string, string>> YourFunction()
{
  List<Tuple<string, string>> TupleResult = new(); // define the multidimensional List<>

  string item1 = "John Smith";
  string item2 = "Mary Jones";

  TupleResult.Add(new Tuple<string, string>(item1, item2)); // populate the multidimensional List<>

  return TupleResult; // return the multidimensional List<>
}



// could also use a dictionary object
public Dictionary<string, string> your_dictionary = new Dictionary<string, string>();
your_dictionary.Clear();
your_dictionary.Add("John", "Smith"); // populate the dictionary



 // could also use a list of anonymous type
 var list = new[]
 { 
   new { Number = 10, Name = "Smith" },
   new { Number = 10, Name = "John" } 
 }.ToList(); // populate the anonymous list

 foreach (var item in list)
 {
   Console.WriteLine(item.Name);
 }
